# Multi-stage Dockerfile for production optimization
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
ENV NEXT_TELEMETRY_DISABLED=1

# Don't set build args as env vars - Railway will provide them at runtime
# Just set a dummy DATABASE_URL for build to prevent errors
ENV DATABASE_URL="mysql://dummy:dummy@localhost:3306/dummy"

RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# server.js is created by next build from the standalone output
CMD ["node", "server.js"]
```

---

### 5. **Create `.dockerignore`**
```
node_modules
npm-debug.log
.git
.gitignore
.env
.env.local
.env.*.local
README.md
.vscode
.idea
*.md
.DS_Store
.next
out
coverage
*.log
.eslintcache
```

---

### 6. **Create `.railwayignore`**
```
node_modules
.git
.env
*.log
.next
out
.vscode
.idea
*.md
.DS_Store
coverage
```

---

### 7. **Update `.gitignore`** (if not already there)

Add these lines if they're not already in your .gitignore:
```
# dependencies
node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local
.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts